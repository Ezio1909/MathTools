name: build


on:
  push:
    branches:
      - master
  pull_request:



jobs:
  Init-env:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
    - uses: actions/checkout
    - name: Set up Python 3.8
      uses: actions/setup-python
      with:
        python-version: 3.8

    - name: Install Poetry
      uses: dschep/install-poetry-action
      
    - name: Turn off Virtualenvs
      run: poetry config virtualenvs.create false
      
    - name: Cache Dependancies
      uses: actions/cache
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: ${{ runner.os }}-poetry-
  
    - name: Install Dependancies
      run: poetry install -D
      

  Format:
    runs-on: ubuntu-latest
    steps:
    - name: Install Black
      run: pip install Black

    - name: Format With Black
      run: |
        black .

  Generate-Requirements:
    runs-on: ubuntu-latest
    steps:
    - name: Install Poetry
      uses: dschep/install-poetry-action
    - name: Generate Requirements.txt
      run: |
        poetry export -f requirements.txt > requirements.txt
          
          
  Push Changes:
    runs-on: ubuntu-latest
    steps:
    - name: Commit files
      if: github.event.push
      run: |
        echo ${{ github.ref }}
        git add .
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -m "ci: Automated build updated Requirements and Formatted with Black" -a | exit 0
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}
        

  tests:
    name: "Python Tox ${{ matrix.python-version }}"
    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8"]
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-python@v1"
        with:
          python-version: "${{ matrix.python-version }}"
      - name: "Install dependencies"
        run: |
          set -xe
          python -VV
          python -m site
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install --upgrade virtualenv tox tox-gh-actions

      - name: "Run tox targets for ${{ matrix.python-version }}"
        run: "python -m tox"

    
